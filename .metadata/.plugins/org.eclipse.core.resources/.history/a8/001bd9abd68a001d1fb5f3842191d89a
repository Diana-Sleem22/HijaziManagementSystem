package application;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.ParseException;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;
import javafx.stage.Stage;

public class billingController implements Initializable {
	ProductModel selectedProduct;
	@FXML
	private Button customer;
	@FXML
	private TableColumn<ProductModel, String> barcode;
	@FXML
	private TableColumn<ProductModel, Integer> totlQt;
	@FXML
	private TableView<ProductModel> billingProductsTable;
	@FXML
	private TableColumn<ProductModel, Integer> quantity;

	@FXML
	private TableColumn<ProductModel, Integer> unitprice;
	@FXML
	private TableColumn<ProductModel, String> productName;
	@FXML
	private Label value;
	int count = 0;

	@FXML
	private TextField barcodeValue;
	private ObservableList<ProductModel> data = FXCollections.observableArrayList();

	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		barcode.setCellValueFactory(new PropertyValueFactory("barcode"));
		productName.setCellValueFactory(new PropertyValueFactory("name"));
		quantity.setCellValueFactory(new PropertyValueFactory("quantitySelected"));
		unitprice.setCellValueFactory(new PropertyValueFactory("price"));
		totlQt.setCellValueFactory(new PropertyValueFactory("quantity"));

		billingProductsTable.setOnMouseClicked((MouseEvent event) -> {
			if (event.getClickCount() > 1) {
				onEdit();
			}
		});
	}

	@FXML
	void decrease(ActionEvent event) {
		if (selectedProduct != null) {
			int temp = count - 1;
			if (temp > -1) {
				value.setText(Integer.toString(count--));
				selectedProduct.setQuantitySelected(temp);
				for (int i = 0; i < data.size(); i++) {
					ProductModel item = data.get(i);
					if (item.getId() == selectedProduct.getId()) {
						data.get(i).setQuantitySelected(temp);
					}
				}
				billingProductsTable.setItems(data);

			}

		}
	}

	@FXML
	void increase(ActionEvent event) {
		if (selectedProduct != null) {
			int temp = count + 1;
			if (temp <= selectedProduct.getQuantity()) {
				value.setText(Integer.toString(temp));
				selectedProduct.setQuantitySelected(temp);
				for (int i = 0; i < data.size(); i++) {
					ProductModel item = data.get(i);
					if (item.getId() == selectedProduct.getId()) {
						data.get(i).setQuantitySelected(temp);
					}
				}
				billingProductsTable.setItems(data);

			}

		}
	}

	@FXML
	void customerPage(javafx.event.ActionEvent actionEvent) throws IOException {
//    	customer.setStyle("-fx-background-color:#c3c7c5; -fx-text-fill:black;");
		try {
			FXMLLoader root = new FXMLLoader(getClass().getResource("customers.fxml"));
			Parent root1 = (Parent) root.load();
			Stage stage = new Stage();
			stage.setScene(new Scene(root1));
			stage.setTitle("Customers");
			stage.show();
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@FXML
	void searchProductsByBarCode(MouseEvent event) throws IOException, ParseException {
		if (!barcodeValue.getText().isEmpty()) {
			selectedProduct = null;
			count = 0;
			JSONObject responseAPI = CommonFunctions.sendHTTPRequest("http://localhost:8080/searchProductsByBarCode",
					"GET", barcodeValue.getText(), "");
			JSONArray arr = (JSONArray) responseAPI.get("data");
			System.out.println(arr);
			for (Object element : arr) {
				JSONObject new_obj = (JSONObject) element;
				data.add(new ProductModel(Integer.parseInt(new_obj.get("id") + ""), new_obj.get("name").toString(),
						new_obj.get("barcode").toString(), Integer.parseInt(new_obj.get("quantity") + ""),
						Integer.parseInt(new_obj.get("price") + ""), new_obj.get("companyFK") + "",
						new_obj.get("categoryFK") + "", "", 0));
			}
			billingProductsTable.setItems(data);
		}
	}

	@FXML
	void addProduct(MouseEvent event) {

	}

	void onEdit() {
		if (billingProductsTable.getSelectionModel().getSelectedItem() != null) {

			selectedProduct = billingProductsTable.getSelectionModel().getSelectedItem();

		}
	}
}
