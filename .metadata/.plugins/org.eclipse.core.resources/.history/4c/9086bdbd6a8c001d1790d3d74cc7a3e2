package application;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.ParseException;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.DatePicker;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;

public class orderController implements Initializable {

	@FXML
	private TableColumn<?, ?> orderAssignee;

	@FXML
	private TableColumn<?, ?> orderDate;

	@FXML
	private DatePicker orderForDate;

	@FXML
	private TableColumn<?, ?> orderNumber;

	@FXML
	private TableColumn<?, ?> orderOwner;

	@FXML
	private TableView<orderInvoice> ordersTable;
	private ObservableList<orderInvoice> data = FXCollections.observableArrayList();

	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		orderNumber.setCellValueFactory(new PropertyValueFactory("orderName"));
		orderAssignee.setCellValueFactory(new PropertyValueFactory("assigneeName"));
		orderOwner.setCellValueFactory(new PropertyValueFactory("customerName"));
		orderDate.setCellValueFactory(new PropertyValueFactory("date"));
		try {
			getAllOrders();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		ordersTable.setOnMouseClicked((MouseEvent event) -> {
			if (event.getClickCount() > 1) {
				onEdit();
			}
		});

	}

	void getAllOrders() throws IOException, ParseException {
		JSONObject responseAPI;

		responseAPI = CommonFunctions.sendHTTPRequest("http://localhost:8080/getOrders", "GET", "", "");
		JSONArray arr = (JSONArray) responseAPI.get("data");

		for (Object element : arr) {
			JSONObject new_obj = (JSONObject) element;

			data.add(new orderInvoice(new_obj.get("orderName") + "", new_obj.get("assigneeName") + "",
					new_obj.get("customerName") + "", new_obj.get("date") + ""));
		}
		ordersTable.setItems(data);
	}

	public void onEdit() {
		// check the table's selected item and get selected item
		if (ordersTable.getSelectionModel().getSelectedItem() != null) {

		}
	}

}
